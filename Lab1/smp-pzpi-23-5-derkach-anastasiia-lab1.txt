МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ




Кафедра «Програмна інженерія»




ЗВІТ
з лабораторної роботи №1
з дисципліни «Скриптові мови програмування»





Виконала:									Перевірив:
ст. гр. ПЗПІ-23-5								ст. викл. каф. ПІ
Деркач Анастасія								Сокорчук І. П.





Харків 2025

ЛАБОРАТОРНА РОБОТА №1
1.1	ЗАВДАННЯ

Розробити Bash-скрипт, який обробляє експортований із сайту https://cist.nure.ua/ розклад занять для всіх груп потоку в форматі CSV та перетворює його у формат CSV для завантаження в Google Календар https://support.google.com/.
Обробка файла:
Читати вхідний CSV файл та вибирати рядки, що відповідають вибраній академічній групі.
Визначити порядкий номер для кожного заняття (лекція, практичне заняття, лабораторна робота) із врахуванням того, що лабораторні роботи складаються із двох пар, а решта занять — із однієї пари.
Створити поле «Subject» із поля «Тема» вхідного CSV файла, але БЕЗ назви академічної групи та дефіса на початку цього поля ("ПЗПІ-23-1 - ПрПА Пз DL ПЗПІ-23-1")
Додати порядковий номер наприкінці теми (Subject) кожного заняття після крапки з комою (опис заняття; №1)
Переформатувати дату та час до формату «mm/dd/yyyy, HH:MM AM|PM,» Gogle Календаря 12-годинний формат часу. Наприклад: 02/30/2025, 11:15 AM,
Заповнити поле «Description» текстом із поля «Опис (Описание)» вхідного CSV файла
Відформатувати дані відповідно до вимог Google Календаря https://support.google.com/calendar/.
Виводити створені для Google Календаря дані у стандартний потік виведення, якщо це не заблоковано ключем -q або --quiet
Записати результат у новий файл із назвою:
Google_TimeTable_??_??_20??.csv
де ??_??_20?? — дата, що відповідає вхідному файлу.

1.2	ОПИС ВИКОНАННЯ РОБОТИ

1.	Спочатку було створено базову структуру скрипту, яка дозволяла обробляти аргументи командного рядка. Були додані перевірки на --help та --version, щоб користувач міг отримати довідку або інформацію про версію скрипту без виконання основного коду. 

1 if [[ "$1" == "--version" ]]; then
2     echo "Версія скрипту: 1.0"
3     exit 0
4 fi

2.	Далі було реалізовано можливість роботи у тихому режимі (-q або --quiet), щоб користувач міг запустити скрипт без зайвих повідомлень у терміналі. Для цього було введено змінну QUIET, яка змінювала поведінку виводу даних.

1 QUIET=false
2 if [[ "$1" == "-q" || "$1" == "--quiet" ]]; then
3     QUIET=true
4     shift
5 fi

3.	Було вирішено, що якщо передано один аргумент, потрібно перевіряти, чи це файл (.csv) або назва групи. Якщо передано два аргументи, перший буде назвою групи, а другий — файлом. Додано перевірку наявності файлу. Якщо вказаний файл не знайдено, користувачеві пропонується вибрати один з доступних файлів. Якщо користувач не вказав файл, йому також пропонується вибрати один з доступних. Якщо файл має неправильне кодування, він автоматично конвертується в UTF-8.

1 if [[ $# -gt 0 ]]; then
2     if [[ $# -eq 1 ]]; then
3         if [[ "$1" =~ \.csv$ ]]; then
4             file="$1"
5         else
6             group="$1"
7         fi
8     elif [[ $# -eq 2 ]]; then
9         group="$1"
10        file="$2"
11    fi
12 fi

4.	Був розроблений механізм отримання списку унікальних груп із файлу. Якщо введена група не знайдена, користувачеві пропонується вибрати одну з доступних.

1 groups=$(tr '\r' '\n' < "$file" | tail -n +2 | awk -F',' '{gsub(/"/, "", $1); split($1, a, " "); print a[1]}' | sort | uniq)

5.	Було додано створення файлу для Google Calendar. Було реалізовано нумерацію лекцій, практик та лабораторних робіт. На фінальному етапі додано видалення тимчасових файлів і вивід підсумкового файлу.

1 OUTPUT_FILE=$(echo "$file" | sed 's/\.tmp$//' | sed 's/^/Google_/')
2 
3 # tr '\r' '\n' < "$file" | head -n 5
4 
5 echo "\"Subject\",\"Start Date\",\"Start Time\",\"End Date\",\"End Time\",\"Description\"" > "$OUTPUT_FILE"
6  
7 lines=$(tr '\r' '\n' < "$file" | tail -n +2 | awk -F'","' '
8 {
9     split($2, date, ".");
10
11    date_key = sprintf("%02d%02d", date[2], date[1]);
12
13    split($3, time, ":");
14    time_key = time[1] time[2];
15
16    print date_key, time_key, $0;
17 }' | sort -k1,1n -k2,2n -k3,3n | cut -d' ' -f3-)

1.3	ВИСНОВКИ

У ході роботи було вивчено та застосовано основні команди Bash для обробки файлів і текстових даних. Створений скрипт дозволяє конвертувати розклад із CSV-файлу у формат, придатний для імпорту в Google Календар, автоматично визначає правильний файл і групу, обробляє текстові дані та конвертує кодування у UTF-8. Завдяки використанню awk, sort, uniq та інших команд вдалося реалізувати сортування, фільтрацію та форматування інформації. Скрипт автоматизує процеси та запобігає помилкам користувача, що робить його зручним і гнучким у використанні.

ДОДАТОК А
Відеозапис

Відеозапис презентації результатів лабораторної роботи:

Хронологічний опис:

ДОДАТОК Б
Програмний код

GitHub репозиторій:

